upstream elios_api {
	server 127.0.0.1:3333;
	keepalive 32;
}

server {
	listen 80;
	server_name prod.api.elios.finance;

	location /.well-known/acme-challenge/ {
		root /var/www/html;
	}

	location / {
		return 301 https://$server_name$request_uri;
	}
}

server {
	listen 443 ssl;
	server_name prod.api.elios.finance;

	ssl_certificate /etc/letsencrypt/live/prod.api.elios.finance/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/prod.api.elios.finance/privkey.pem;

	ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Configuration des logs
    access_log /var/log/nginx/elios_access.log;
    error_log /var/log/nginx/elios_error.log;

	gzip on;
	gzip_vary on;
	gzip_min_length 1024;

	gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

	location /api/ {
		# Proxy vers l'API Docker
        proxy_pass http://elios_api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # CORS headers (si nécessaire)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

		# Gestion des requêtes OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
	}

	location /api-docs/ {
		proxy_pass http://elios_api/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
	}

	location /health {
	    proxy_pass http://elios_api/api;
	    access_log off;
	}

    # Robots.txt
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
        access_log off;
    }
}
